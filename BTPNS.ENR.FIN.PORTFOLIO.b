*-----------------------------------------------------------------------------------
	SUBROUTINE BTPNS.ENR.FIN.PORTFOLIO(Y.OUTPUTLIST)
*-----------------------------------------------------------------------------------
* Author	: Kania Lydia
* Usage		: Enquiry Portfolio Financing
* Date		: 20220512
* Reference	: 
*-----------------------------------------------------------------------------------
* Modification History:
* YYYYMMDD - Name - Reference
*-----------------------------------------------------------------------------------	
	$INSERT I_COMMON
    $INSERT I_EQUATE   
	$INSERT I_ENQUIRY.COMMON
	$INSERT I_F.AA.ARRANGEMENT
	$INSERT I_F.CUSTOMER
	$INSERT I_F.AA.SETTLEMENT
    $INSERT I_F.AA.ACCOUNT
	$INSERT I_F.AA.TERM.AMOUNT
	$INSERT I_F.AA.ACCOUNT.DETAILS
	$INSERT I_F.AA.BILL.DETAILS
    $INSERT I_F.AA.INTEREST
    $INSERT I_F.ACCOUNT
	$INSERT I_F.LIMIT
	$INSERT I_F.AA.LIMIT
	$INSERT I_F.ATI.TH.AA.SUMMARY
	$INSERT I_F.ATI.TH.PRODUCT.PARAMETER
	$INSERT I_F.MNEMONIC.ACCOUNT
	$INSERT I_F.ALTERNATE.ACCOUNT
	
*-----------------------------------------------------------------------------
MAIN:
*-----------------------------------------------------------------------------

    GOSUB INIT
    GOSUB SELECTION

    RETURN
*-----------------------------------------------------------------------------
INIT:
*-----------------------------------------------------------------------------
    FN.AA.ARRANGEMENT	= 'F.AA.ARRANGEMENT'
	F.AA.ARRANGEMENT	= ''
	CALL OPF(FN.AA.ARRANGEMENT, F.AA.ARRANGEMENT)

	FN.CUSTOMER	= 'F.CUSTOMER'
	F.CUSTOMER	= ''
	CALL OPF(FN.CUSTOMER, F.CUSTOMER)
	
	FN.CUSTOMER.ACCOUNT = "F.CUSTOMER.ACCOUNT"
    F.CUSTOMER.ACCOUNT  = ""
    CALL OPF(FN.CUSTOMER.ACCOUNT, F.CUSTOMER.ACCOUNT)
	
	FN.ACCOUNT  = 'F.ACCOUNT'
	F.ACCOUNT   = ''
	CALL OPF(FN.ACCOUNT, F.ACCOUNT)
	
	FN.LIMIT  = 'F.LIMIT'
	F.LIMIT   = ''
	CALL OPF(FN.LIMIT, F.LIMIT)
	
	FN.ATI.TH.AA.SUMMARY	= "F.ATI.TH.AA.SUMMARY"
	F.ATI.TH.AA.SUMMARY		= ""
	CALL OPF(FN.ATI.TH.AA.SUMMARY, F.ATI.TH.AA.SUMMARY)
	
	FN.MNEMONIC.ACCOUNT  = 'F.MNEMONIC.ACCOUNT'
	F.MNEMONIC.ACCOUNT   = ''
	CALL OPF(FN.MNEMONIC.ACCOUNT, F.MNEMONIC.ACCOUNT)
	
	FN.ALT.ACCT = 'F.ALTERNATE.ACCOUNT'
    F.ALT.ACCT  = ''
    CALL OPF(FN.ALT.ACCT, F.ALT.ACCT)
	
	FN.AA.ACCOUNT.DETAILS	= 'F.AA.ACCOUNT.DETAILS'
	F.AA.ACCOUNT.DETAILS	= ''
	CALL OPF(FN.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS)
	
	FN.AA.BILL.DETAILS	= 'F.AA.BILL.DETAILS'
	F.AA.BILL.DETAILS	= ''
	CALL OPF(FN.AA.BILL.DETAILS,F.AA.BILL.DETAILS)
	
	
	FN.ATI.TH.PRODUCT.PARAMETER = "F.ATI.TH.PRODUCT.PARAMETER"
	F.ATI.TH.PRODUCT.PARAMETER	= ''
	CALL OPF(FN.ATI.TH.PRODUCT.PARAMETER, F.ATI.TH.PRODUCT.PARAMETER)
	
	RETURN
*-----------------------------------------------------------------------------
SELECTION:
*-----------------------------------------------------------------------------

    Y.FIELD = ENQ.SELECTION<2,0>
    FIND "Y.CIF.ID" IN Y.FIELD SETTING POS.FM, POS1 THEN
        Y.FIELD1		= ENQ.SELECTION<2,POS1>
        Y.OPERATION1	= ENQ.SELECTION<3,POS1>
        Y.CIF.ID		= ENQ.SELECTION<4,POS1>
    END
	
	FIND "Y.REFERENCE" IN Y.FIELD SETTING POS.FM, POS1 THEN
        Y.FIELD2		= ENQ.SELECTION<2,POS1>
        Y.OPERATION3	= ENQ.SELECTION<3,POS1>
        Y.REF.ID		= ENQ.SELECTION<4,POS1>
    END
	
	BEGIN CASE
		CASE Y.CIF.ID NE "" AND Y.REF.ID NE ""
		ENQ.ERROR = "Hanya boleh mengisi salah satu dari referensi"
        RETURN
	CASE Y.CIF.ID EQ "" AND Y.REF.ID EQ ""
		ENQ.ERROR = "Referensi tidak boleh kosong"
        RETURN
	CASE Y.CIF.ID NE ""
		CALL F.READ(FN.CUSTOMER, Y.CIF.ID, R.CUSTOMER, F.CUSTOMER, Y.ERR.CUSTOMER)
		Y.NAME	= R.CUSTOMER<EB.CUS.NAME.1>
		CALL F.READ(FN.CUSTOMER.ACCOUNT, Y.CIF.ID, R.CUSTOMER.ACCOUNT, F.CUSTOMER.ACCOUNT, CUSTOMER.ACCOUNT.ERR)
		Y.CNT.AC = DCOUNT(R.CUSTOMER.ACCOUNT, FM)
		IF R.CUSTOMER THEN
			FOR Y.LOOP = 1 TO Y.CNT.AC
				Y.ACCOUNT.ID	= R.CUSTOMER.ACCOUNT<Y.LOOP>
				CALL F.READ(FN.ACCOUNT, Y.ACCOUNT.ID, R.ACCOUNT, F.ACCOUNT, Y.ERR.ACCOUNT)
				Y.ARRANGEMENT.ID	= R.ACCOUNT<AC.ARRANGEMENT.ID>
				Y.CUS.ID			= R.ACCOUNT<AC.CUSTOMER>
				Y.ALTERNATE.ID		= R.ACCOUNT<AC.ALT.ACCT.ID,1>
				
				CALL F.READ(FN.AA.ARRANGEMENT, Y.ARRANGEMENT.ID, R.AA.ARRANGEMENT, F.AA.ARRANGEMENT, Y.ERR.AA.ARRANGEMENT)
				Y.PRODUCT.LINE		= R.AA.ARRANGEMENT<AA.ARR.PRODUCT.LINE>
				Y.START.DATE	    = R.AA.ARRANGEMENT<AA.ARR.START.DATE>
				Y.LINKED.APPL.ID    = R.AA.ARRANGEMENT<AA.ARR.LINKED.APPL.ID,1>
				Y.PRODUCT			= R.AA.ARRANGEMENT<AA.ARR.ACTIVE.PRODUCT>
			
				IF Y.ALTERNATE.ID EQ "" THEN 
					Y.ALTERNATE.ID		= Y.ARRANGEMENT.ID
				END
				
				CALL F.READ(FN.CUSTOMER, Y.CUS.ID, R.CUSTOMER, F.CUSTOMER, Y.ERR.CUSTOMER)
				Y.NAME	= R.CUSTOMER<EB.CUS.NAME.1>
				
				IF Y.PRODUCT.LINE EQ "LENDING" THEN
					GOSUB PROCESS
				END
			NEXT Y.LOOP
		END
	CASE Y.REF.ID NE ""
		CALL F.READ(FN.ACCOUNT, Y.REF.ID, R.ACCT, F.ACCOUNT, Y.ERR.ACCOUNT)
		CALL F.READ(FN.ALT.ACCT, Y.REF.ID, R.ALT.ACCT, F.ALT.ACCT, Y.ERR.ALT.ACCT)
		CALL F.READ(FN.MNEMONIC.ACCOUNT, Y.REF.ID, R.MNEMONIC.ACCOUNT, F.MNEMONIC.ACCOUNT, Y.ERR.MNEMONIC.ACCOUNT)
		
		BEGIN CASE
		CASE R.ACCT NE ""
			Y.ACCT.ID	= Y.REF.ID
			GOSUB PROCESS.ACCOUNT
		CASE R.ALT.ACCT NE ""
			Y.ACCT.ID	= R.ALT.ACCT<1>
			GOSUB PROCESS.ACCOUNT
		CASE R.MNEMONIC.ACCOUNT NE ""
			Y.ACCT.ID	= R.MNEMONIC.ACCOUNT<1>
			GOSUB PROCESS.ACCOUNT
		END CASE 
	END CASE
	
	RETURN
*-----------------------------------------------------------------------------	
PROCESS.ACCOUNT:
*-----------------------------------------------------------------------------
	CALL F.READ(FN.ACCOUNT, Y.ACCT.ID, R.ACCOUNT, F.ACCOUNT, Y.ERR.ACCOUNT)
	Y.CUS.ID	= R.ACCOUNT<AC.CUSTOMER>
	
	CALL F.READ(FN.CUSTOMER, Y.CUS.ID, R.CUSTOMER, F.CUSTOMER, Y.ERR.CUSTOMER)
	Y.NAME		= R.CUSTOMER<EB.CUS.NAME.1>
	
	CALL F.READ(FN.CUSTOMER.ACCOUNT, Y.CUS.ID, R.CUSTOMER.ACCOUNT, F.CUSTOMER.ACCOUNT, CUSTOMER.ACCOUNT.ERR)
	Y.CNT.AC = DCOUNT(R.CUSTOMER.ACCOUNT, FM)
	IF R.CUSTOMER THEN
		FOR Y.LOOP = 1 TO Y.CNT.AC
			Y.ACCOUNT.ID	= R.CUSTOMER.ACCOUNT<Y.LOOP>
			CALL F.READ(FN.ACCOUNT, Y.ACCOUNT.ID, R.ACCOUNT, F.ACCOUNT, Y.ERR.ACCOUNT)
			Y.ARRANGEMENT.ID	= R.ACCOUNT<AC.ARRANGEMENT.ID>
			Y.CUS.ID			= R.ACCOUNT<AC.CUSTOMER>
			Y.ALTERNATE.ID		= R.ACCOUNT<AC.ALT.ACCT.ID,1>
			
			CALL F.READ(FN.AA.ARRANGEMENT, Y.ARRANGEMENT.ID, R.AA.ARRANGEMENT, F.AA.ARRANGEMENT, Y.ERR.AA.ARRANGEMENT)
			Y.PRODUCT.LINE		= R.AA.ARRANGEMENT<AA.ARR.PRODUCT.LINE>
			Y.START.DATE	    = R.AA.ARRANGEMENT<AA.ARR.START.DATE>
			Y.LINKED.APPL.ID    = R.AA.ARRANGEMENT<AA.ARR.LINKED.APPL.ID,1>
			Y.PRODUCT			= R.AA.ARRANGEMENT<AA.ARR.ACTIVE.PRODUCT>
		
			IF Y.ALTERNATE.ID EQ "" THEN 
				Y.ALTERNATE.ID		= Y.ARRANGEMENT.ID
			END
			
			CALL F.READ(FN.CUSTOMER, Y.CUS.ID, R.CUSTOMER, F.CUSTOMER, Y.ERR.CUSTOMER)
			Y.NAME	= R.CUSTOMER<EB.CUS.NAME.1>
			
			IF Y.PRODUCT.LINE EQ "LENDING" THEN
				GOSUB PROCESS
			END
		NEXT Y.LOOP
	END
			
	RETURN
*-----------------------------------------------------------------------------	
PROCESS:
*-----------------------------------------------------------------------------

	Y.NEXT.DATE					= ""
	Y.PRINCIPALPFT				= ""
	Y.ACTIVITY.1				= ""
	Y.ACTIVITY.2				= ""
	Y.MANUAL.COLLECT.FLAG		= ""
	Y.MANUAL.COLLECT			= ""
	Y.RESTRCUTURE.COLLECT.FLAG	= ""
	Y.RESTRCUTURE.COLLECT		= ""
	Y.WORST.COLLECT				= ""
	Y.FLAG.RBH.PHB				= ""
	Y.ASSET.CLASS				= ""
	
	CALL F.READ(FN.AA.ACCOUNT.DETAILS,Y.ARRANGEMENT.ID,R.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS,ERR.ACCDT)
	Y.PAY.DATE	= R.AA.ACCOUNT.DETAILS<AA.AD.BILL.PAY.DATE>
	Y.PAY.CNT	= DCOUNT(Y.PAY.DATE,VM)
	FOR Y = 1 TO Y.PAY.CNT
	Y.BILL.IDS	= R.AA.ACCOUNT.DETAILS<AA.AD.BILL.ID,Y>
	Y.BILL.CNT	= DCOUNT(Y.BILL.IDS,SM)
		FOR Z = 1 TO Y.BILL.CNT
			Y.BILL.ID	= R.AA.ACCOUNT.DETAILS<AA.AD.BILL.ID,Y,Z>
			Y.PAY.METD	= R.AA.ACCOUNT.DETAILS<AA.AD.PAY.METHOD,Y,Z>
			CALL F.READ(FN.AA.BILL.DETAILS, Y.BILL.ID, R.AA.BILL.DETAILS, F.AA.BILL.DETAILS, ERR.BILL)
			Y.TOT.OS.LI.PRK	+= R.AA.BILL.DETAILS<AA.BD.OS.TOTAL.AMOUNT>
			Y.PROP.ID	= R.AA.BILL.DETAILS<AA.BD.PROPERTY>
			Y.PROP.CNT	= DCOUNT(Y.PROP.ID,VM)
			FOR N = 1 TO Y.PROP.CNT 
				Y.PROPERTY	= R.AA.BILL.DETAILS<AA.BD.PROPERTY,N>
				IF Y.PROPERTY EQ "ACCOUNT" OR Y.PROPERTY EQ "PRINCIPALPFT" THEN
					Y.OS.MARG.PRK	+=  R.AA.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT,N>
				END
			NEXT N
		NEXT Z
	NEXT Y
	
	CALL AA.GET.PROPERTY.RECORD("", Y.ARRANGEMENT.ID, "COMMITMENT", TODAY, "", "", R.AA.TERM.AMOUNT, ERR.AA.TERM.AMOUNT)
    Y.MATURITY.DATE = R.AA.TERM.AMOUNT<AA.AMT.MATURITY.DATE>
	Y.AMOUNT		= R.AA.TERM.AMOUNT<AA.AMT.AMOUNT>
	Y.TERM			= R.AA.TERM.AMOUNT<AA.AMT.TERM>
	
	Y.PROPERTY.CLASS.LIM 	= ""
	CALL AA.GET.PROPERTY.RECORD("", Y.ARRANGEMENT.ID, "LIMIT", TODAY, Y.PROPERTY.CLASS.LIM, "", R.AA.LIMIT, RET.ERROR.LIM)
	Y.LIMIT.REFERENCE		= R.AA.LIMIT<AA.LIM.LIMIT.REFERENCE>
	Y.LIMIT.SERIAL			= R.AA.LIMIT<AA.LIM.LIMIT.SERIAL>
	Y.LEN.REF				= LEN(Y.LIMIT.REFERENCE)
	Y.LIMIT.REF				= Y.LIMIT.REFERENCE[1,3]
		
	BEGIN CASE
	CASE Y.LIMIT.REF EQ '000'
		Y.LIMIT	= Y.CUS.ID:'.':Y.LIMIT.REFERENCE:'.':Y.LIMIT.SERIAL
	CASE Y.LEN.REF LT 4 
		Y.LIMIT	= Y.CUS.ID:'.':'0000':Y.LIMIT.REFERENCE:'.':Y.LIMIT.SERIAL
	CASE Y.LEN.REF EQ 4
		Y.LIMIT	= Y.CUS.ID:'.':'000':Y.LIMIT.REFERENCE:'.':Y.LIMIT.SERIAL	
	END CASE
		
	CALL F.READ(FN.LIMIT,Y.LIMIT,R.LIMIT,F.LIMIT,ERR.LI)
	Y.PLAFOND	= R.LIMIT<LI.INTERNAL.AMOUNT>
	
	CALL AA.GET.PROPERTY.RECORD("", Y.ARRANGEMENT.ID, "SETTLEMENT", TODAY, "", "", R.SETTLEMENT, ERR.SETTLEMENT)
    Y.PAYIN.ACCOUNT = R.SETTLEMENT<AA.SET.PAYIN.ACCOUNT,1>
	
	CALL AA.GET.PROPERTY.RECORD("", Y.ARRANGEMENT.ID, "PRINCIPALPFT", TODAY, "", "", R.AA.ARR.INTEREST, ERR.AA.ARR.INTEREST)
    Y.EFFECTIVE.RATE = R.AA.ARR.INTEREST<AA.INT.EFFECTIVE.RATE,1>
	
	CALL F.READ(FN.ATI.TH.AA.SUMMARY, Y.ARRANGEMENT.ID, R.ATI.TH.AA.SUMMARY, F.ATI.TH.AA.SUMMARY, Y.ERR.ATI.TH.AA.SUMMARY)
	Y.MANUAL.COLLECT.FLAG		= R.ATI.TH.AA.SUMMARY<AA.SUM.MANUAL.COLLECT.FLAG>
	Y.MANUAL.COLLECT			= R.ATI.TH.AA.SUMMARY<AA.SUM.MANUAL.COLLECT>
	Y.RESTRCUTURE.COLLECT.FLAG	= R.ATI.TH.AA.SUMMARY<AA.SUM.RESTRUCTURE.COLLECT.FLAG>
	Y.RESTRCUTURE.COLLECT		= R.ATI.TH.AA.SUMMARY<AA.SUM.RESTRUCTURE.COLLECT>
	Y.WORST.COLLECT				= R.ATI.TH.AA.SUMMARY<AA.SUM.WORST.COLLECT>
	
	CALL F.READ(FN.ATI.TH.PRODUCT.PARAMETER, Y.PRODUCT, R.ATI.TH.PRODUCT.PARAMETER, F.ATI.TH.PRODUCT.PARAMETER, Y.ERR.ATI.TH.PRODUCT.PARAMETER)
	Y.FLAG.RBH.PHB				= R.ATI.TH.PRODUCT.PARAMETER<PROD.PAR.FLAG.RBH.PBH>
	
	BEGIN CASE
	CASE Y.MANUAL.COLLECT.FLAG EQ "MANUAL"
		Y.ASSET.CLASS		= Y.MANUAL.COLLECT
	CASE Y.MANUAL.COLLECT.FLAG NE "MANUAL" AND Y.RESTRCUTURE.COLLECT.FLAG EQ "YES"	
		Y.ASSET.CLASS		= Y.RESTRCUTURE.COLLECT
	CASE Y.MANUAL.COLLECT.FLAG NE "MANUAL" AND Y.RESTRCUTURE.COLLECT.FLAG NE "YES" AND Y.FLAG.RBH.PHB NE "YES"
		IF NOT(Y.ARR.AGE.STATUS) OR Y.ARR.AGE.STATUS EQ "DUE" THEN
			Y.ASSET.CLASS	= "CUR"
		END ELSE
			Y.ASSET.CLASS	= Y.ARR.AGE.STATUS
		END
	CASE Y.MANUAL.COLLECT.FLAG NE "MANUAL" AND Y.RESTRCUTURE.COLLECT.FLAG NE "YES" AND Y.FLAG.RBH.PHB EQ "YES"
		Y.ASSET.CLASS		= Y.WORST.COLLECT
	END CASE
	
	Y.PROCESS.DATE = TODAY
    Y.DAY.COUNT    = "+1C"
    CALL CDT('', Y.PROCESS.DATE, Y.DAY.COUNT)
    Y.NEXT.SCHEDULE.DATE = Y.PROCESS.DATE
	Y.TOT.PAYMENT			= ""
	Y.DUE.DATES				= ""
	Y.DUE.VAR				= ""
	Y.DUE.TYPES				= ""
	Y.DUE.METHODS			= ""
	Y.DUE.TYPE.AMTS			= ""
	Y.DUE.PROPS.LIST		= ""
	Y.DUE.PROP.AMTS.LIST	= ""
	Y.DUE.OUTS				= ""
	CALL AA.SCHEDULE.PROJECTOR(Y.ARRANGEMENT.ID, "", "", Y.NEXT.SCHEDULE.DATE, Y.TOT.PAYMENT, Y.DUE.DATES, Y.DUE.VAR, Y.DUE.TYPES, Y.DUE.METHODS, Y.DUE.TYPE.AMTS, Y.DUE.PROPS.LIST, Y.DUE.PROP.AMTS.LIST, Y.DUE.OUTS)
    
    Y.NEXT.DATE		= Y.DUE.DATES<1>
    Y.PRINCIPALPFT	= Y.TOT.PAYMENT<1>
	
	GOSUB WRITE.DATA

	RETURN
*-----------------------------------------------------------------------------
WRITE.DATA:
*-----------------------------------------------------------------------------

    Y.OUTPUT =  Y.CUS.ID					; *1 CIF No
	Y.OUTPUT := "|" : Y.NAME			    ; *2 Customer Name
    Y.OUTPUT := "|" : Y.ALTERNATE.ID		; *3 ALTERNATE ID/AA ID 
    Y.OUTPUT := "|" : Y.ARRANGEMENT.ID		; *4  AA ID
    Y.OUTPUT := "|" : Y.LINKED.APPL.ID		; *5 ID LINK
    Y.OUTPUT := "|" : Y.PLAFOND				; *6 Nominal Platfon
    Y.OUTPUT := "|" : Y.TERM				; *7 Tenor
    Y.OUTPUT := "|" : Y.START.DATE			; *8 Start Date
    Y.OUTPUT := "|" : Y.MATURITY.DATE		; *9 Jatuh Tempo
    Y.OUTPUT := "|" : Y.PRINCIPALPFT		; *10 Angsuran
    Y.OUTPUT := "|" : Y.NEXT.DATE			; *11 Angsuran Selanjutnya
    Y.OUTPUT := "|" : Y.PAYIN.ACCOUNT		; *12 Rek Sumber Angsuran
    Y.OUTPUT := "|" : Y.ASSET.CLASS			; *13 Kolektabilitas
    Y.OUTPUT := "|" : Y.EFFECTIVE.RATE		; *14 Rate Margin
	Y.OUTPUT := "|" : Y.OS.MARG.PRK			; *15 Tunggakan
	
	Y.OUTPUTLIST<-1> = Y.OUTPUT
	
	RETURN
*-----------------------------------------------------------------------------
END

	
	