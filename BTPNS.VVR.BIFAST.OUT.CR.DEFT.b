	SUBROUTINE BTPNS.VVR.BIFAST.OUT.CR.DEFT
*-----------------------------------------------------------------------------
* Developer Name     : Ratih Purwaning Utami
* Development Date   : 20220609
* Description        : Routine to default BI FAST OUT CR fields
*-----------------------------------------------------------------------------
* Modification History:-
*-----------------------------------------------------------------------------
* Date            Modified by                Description
*-----------------------------------------------------------------------------
* 20220823        Ratih Purwaning Utami      Update mandatory condition for commission.type
*-----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CUSTOMER
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_F.AA.ACCOUNT
    $INSERT I_F.COMPANY
    $INSERT I_F.CURRENCY
    $INSERT I_F.IDIH.FUND.PRODUCT.PAR
    $INSERT I_GTS.COMMON
    $INSERT I_F.BTPNS.TL.BFAST.INTERFACE.PARAM
    $INSERT I_F.AA.ACCOUNT.DETAILS
	$INSERT I_F.POSTING.RESTRICT
	$INSERT I_F.SECTOR


*-----------------------------------------------------------------------------
MAIN:
*-----------------------------------------------------------------------------

    GOSUB INIT
    GOSUB PROCESS

    RETURN

*-----------------------------------------------------------------------------
INIT:
*-----------------------------------------------------------------------------

    FN.CURRENCY = 'F.CURRENCY'
    F.CURRENCY = ''
    CALL OPF(FN.CURRENCY,F.CURRENCY)

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.ACCOUNT.HIS = 'F.ACCOUNT$HIS'
    F.ACCOUNT.HIS  = ''
    CALL OPF(FN.ACCOUNT.HIS, F.ACCOUNT.HIS)

    FN.CUSTOMER = 'F.CUSTOMER'
    F.CUSTOMER  = ''
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)

    FN.IDIH.FUND.PRODUCT.PAR = "F.IDIH.FUND.PRODUCT.PAR"
    F.IDIH.FUND.PRODUCT.PAR  = ""
    CALL OPF(FN.IDIH.FUND.PRODUCT.PAR, F.IDIH.FUND.PRODUCT.PAR)

    FN.BTPNS.TL.BFAST.INTERFACE.PARAM = "F.BTPNS.TL.BFAST.INTERFACE.PARAM"
    F.BTPNS.TL.BFAST.INTERFACE.PARAM  = ""
    CALL OPF(FN.BTPNS.TL.BFAST.INTERFACE.PARAM, F.BTPNS.TL.BFAST.INTERFACE.PARAM)

    FN.AA.ACCOUNT.DETAILS = "F.AA.ACCOUNT.DETAILS"
    F.AA.ACCOUNT.DETAILS  = ""
    CALL OPF(FN.AA.ACCOUNT.DETAILS, F.AA.ACCOUNT.DETAILS)
	
	FN.POSTING.RESTRICT = "F.POSTING.RESTRICT"
	F.POSTING.RESTRICT  = ""
	CALL OPF(FN.POSTING.RESTRICT, F.POSTING.RESTRICT)
	
	FN.SECTOR = "F.SECTOR"
	F.SECTOR  = ""
	CALL OPF(FN.SECTOR, F.SECTOR)

    Y.AMT.WORDS = '' ; Y.ERR.MSG = '' ; Y.OUT = ''
    Y.LANGUAGE = 'ID' ; Y.LINE.LENGTH = 180
    Y.NO.OF.LINES = 1 ; CTR.OUT = 1 ; Y.CHQ = '' ; Y.CUR = "IDR"
    Y.TRANS.CODE = ""
    
    Y.DATE = TODAY

    Y.APP       = "FUNDS.TRANSFER" :FM: "ACCOUNT" :FM: "CUSTOMER" :FM: "AA.ARR.ACCOUNT" :FM:"SECTOR"
    Y.FLD.NAME  = "B.DBTR.NM":VM: "DRAW.CHQ.NO" :VM: "AMT.WORDS" :VM: "ATI.JNAME.1" :VM: "B.DBTR.ID"
	Y.FLD.NAME := VM: "B.DBTR.ACCTYPE" : VM: "B.DBTR.TYPE" :VM: "B.DBTR.RESSTS"
    Y.FLD.NAME := FM: "ATI.JOINT.NAME"
    Y.FLD.NAME := FM: "CUST.TYPE" :VM: "RESIDE.Y.N" :VM: "LEGAL.ID.NO"
    Y.FLD.NAME := FM: "ATI.JOINT.NAME"
	Y.FLD.NAME := FM: "SECTOR.TYP"

    Y.POS       = ""
    CALL MULTI.GET.LOC.REF(Y.APP, Y.FLD.NAME, Y.POS)

    Y.DBTR.NM.POS              = Y.POS<1,1>
    Y.DRAW.CHQ.NO.POS          = Y.POS<1,2>
    Y.AMT.WORDS.POS            = Y.POS<1,3>
    Y.FT.ATI.JNAME.1.POS       = Y.POS<1,4>
    Y.FT.DBTR.ID.POS           = Y.POS<1,5>
	Y.DBTR.ACCTYPE.POS         = Y.POS<1,6>
	Y.DBTR.TYPE.POS            = Y.POS<1,7>
	Y.DBTR.RESSTS.POS          = Y.POS<1,8>
	
    Y.AC.ATI.JOINT.NAME.POS    = Y.POS<2,1>

    Y.CUST.TYPE.POS            = Y.POS<3,1>
    Y.RESIDE.Y.N.POS           = Y.POS<3,2>
    Y.LEGAL.ID.NOE.POS         = Y.POS<3,3>

    Y.AA.ATI.JOINT.NAME.POS    = Y.POS<4,1>
	
	Y.SECTOR.TYP.POS           = Y.POS<5,1>

    RETURN	

*-----------------------------------------------------------------------------
PROCESS:
*-----------------------------------------------------------------------------

    Y.ACCOUNT = COMI
    
    CALL F.READ(FN.ACCOUNT, Y.ACCOUNT, R.AC, F.ACCOUNT, ERR.ACCOUNT)
	
	IF Y.ACCOUNT[1,2] EQ 'PL' THEN
		ETEXT = "AC-INPUT.NOT.ALLOWED.FOR.PL"
		CALL STORE.END.ERROR
	END
	
	IF NOT(R.AC) THEN
		ETEXT = "AC-ACCOUNT.NOT.FOUND"
		CALL STORE.END.ERROR
	END
    Y.CATEGORY = R.AC<AC.CATEGORY>

    CALL F.READ(FN.BTPNS.TL.BFAST.INTERFACE.PARAM,"SYSTEM",R.BIFAST.PARAM,F.BTPNS.TL.BFAST.INTERFACE.PARAM,READ.PAR.ERR)
    Y.CATEG.RESTRICT = R.BIFAST.PARAM<BF.INT.PAR.ID.SAV.RESTRICT>
    LOCATE Y.CATEGORY IN Y.CATEG.RESTRICT<1,1> SETTING POS THEN
        ETEXT = "EB-AC.CANT.DEBIT"
        CALL STORE.END.ERROR
    END

    IF NUM(Y.ACCOUNT) THEN
        Y.INACTIV.MARKER = R.AC<AC.INACTIV.MARKER>
        Y.AA.ID = R.AC<AC.ARRANGEMENT.ID>

        CALL F.READ(FN.AA.ACCOUNT.DETAILS, Y.AA.ID, R.AA.ACCOUNT.DETAILS, F.AA.ACCOUNT.DETAILS, ERR.AA.ACCOUNT.DETAILS)
        Y.ARR.DORMANCY.STATUS = UPCASE(R.AA.ACCOUNT.DETAILS<AA.AD.ARR.DORMANCY.STATUS>)

        IF Y.ARR.DORMANCY.STATUS EQ "DORMANT" OR Y.INACTIV.MARKER EQ "Y" THEN
            ETEXT = "EB-DORMANT.ACCT"
            CALL STORE.END.ERROR
        END

    END
	
    Y.DEBIT.AMOUNT = R.NEW(FT.DEBIT.AMOUNT)
	
    IF Y.DEBIT.AMOUNT THEN
        Y.PAR.MINIMUM = R.BIFAST.PARAM<BF.INT.PAR.MIN.TXN.AMT>
        Y.PAR.MAXIMUM = R.BIFAST.PARAM<BF.INT.PAR.MAX.TXN.AMT>

        IF Y.DEBIT.AMOUNT LT Y.PAR.MINIMUM THEN
			AF = FT.DEBIT.AMOUNT
	    	ETEXT = "FT-BIFAST.MIN.AMOUNT"
	    	CALL STORE.END.ERROR
	    END

        IF Y.DEBIT.AMOUNT GT Y.PAR.MAXIMUM THEN
			AF = FT.DEBIT.AMOUNT
	    	ETEXT = "FT-BIFAST.MAX.AMOUNT"
	    	CALL STORE.END.ERROR
	    END

* Using core overdraft validation 
*        Y.FMT.AMOUNT     = LEN(R.NEW(FT.AMOUNT.DEBITED))
*		Y.AMOUNT.DEBITED = R.NEW(FT.AMOUNT.DEBITED)[4,Y.FMT.AMOUNT]

*        CALL ID.AC.CHK.AVAIL.AMT(Y.ACCOUNT, Y.AMOUNT.DEBITED, Y.AVAIL.AMT, Y.MIN.BAL, Y.CATEGORY, Y.AMOUNT.TOT.LOCK)

*	    IF (Y.AVAIL.AMT LT 0) THEN
*	    	ETEXT = "AC-IDI.AMT.OVERDRAFT" : FM : Y.ACCOUNT
*	    	CALL STORE.END.ERROR
*	    END
    END
	
	Y.RESTRICT.CODE = R.AC<AC.POSTING.RESTRICT>
	CALL F.READ(FN.POSTING.RESTRICT,Y.RESTRICT.CODE,R.POSTING.RESTRICT,F.POSTING.RESTRICT,POST.REST.ERR)
	Y.RESTRICT.TYPE = R.POSTING.RESTRICT<AC.POS.RESTRICTION.TYPE>
	IF Y.RESTRICT.TYPE EQ 'DEBIT' OR Y.RESTRICT.TYPE EQ 'ALL' THEN
        AF    = FT.DEBIT.ACCT.NO
        ETEXT = 'AC-POSTING.RESTRICTION.SET'
        CALL STORE.END.ERROR
    END

    IF Y.CATEGORY GE 1000 AND Y.CATEGORY LT 2999 THEN
        T(FT.CHEQ.TYPE)<3>      = ''
        T(FT.CHEQUE.NUMBER)<3>  = ''
    END
    ELSE
        R.NEW(FT.CHEQ.TYPE)     = ""
        R.NEW(FT.CHEQUE.NUMBER) = ""
        T(FT.CHEQ.TYPE)<3>      = 'NOINPUT'
        T(FT.CHEQUE.NUMBER)<3>  = 'NOINPUT'
    END
	
	IF Y.CATEGORY GE 6000 AND Y.CATEGORY LT 6500 THEN
		R.NEW(FT.LOCAL.REF)<1,Y.DBTR.ACCTYPE.POS> = "10"
	END
	IF Y.CATEGORY GE 1000 AND Y.CATEGORY LT 2999 THEN
		R.NEW(FT.LOCAL.REF)<1,Y.DBTR.ACCTYPE.POS> = "20"
	END

    Y.AA.ID = R.AC<AC.ARRANGEMENT.ID>

    PROPERTY.ID = "BALANCE"
    Y.PROPERTY.CLASS = ""
    Y.EFFECTIVE.DATE = TODAY
    CALL AA.GET.PROPERTY.RECORD("",Y.AA.ID,PROPERTY.ID,Y.EFFECTIVE.DATE,Y.PROPERTY.CLASS,"",R.AA.ACCOUNT,RET.ERROR)

    IF (NUM(Y.ACCOUNT[1,3])) THEN
        R.NEW(FT.LOCAL.REF)<1,Y.FT.ATI.JNAME.1.POS> = R.AA.ACCOUNT<AA.AC.LOCAL.REF, Y.AA.ATI.JOINT.NAME.POS>
    END ELSE
        R.NEW(FT.LOCAL.REF)<1,Y.FT.ATI.JNAME.1.POS> = R.AC<AC.ACCOUNT.TITLE.1>
    END

    Y.CUSTOMER = R.AC<AC.CUSTOMER>
    CALL F.READ(FN.CUSTOMER,Y.CUSTOMER,R.CUS,F.CUSTOMER,CUS.ERR)
    Y.STREET        = R.CUS<EB.CUS.STREET>
    Y.CUSTOMER.TYPE = R.CUS<EB.CUS.LOCAL.REF><1,Y.CUST.TYPE.POS>
    Y.RESIDE.Y.N    = R.CUS<EB.CUS.LOCAL.REF><1,Y.RESIDE.Y.N.POS>
    Y.LEGAL.ID.NO   = R.CUS<EB.CUS.LOCAL.REF><1,Y.LEGAL.ID.NOE.POS>
	Y.RESIDENCE     = R.CUS<EB.CUS.RESIDENCE>
	Y.SECTOR        = R.CUS<EB.CUS.SECTOR>
	
	IF Y.RESIDENCE EQ "ID" THEN
		R.NEW(FT.LOCAL.REF)<1,Y.DBTR.RESSTS.POS> = "01"
    END ELSE
		R.NEW(FT.LOCAL.REF)<1,Y.DBTR.RESSTS.POS> = "02"
	END
	
	CALL F.READ(FN.SECTOR, Y.SECTOR, R.SECTOR, F.SECTOR,READ.SEC.ERR)
	Y.SECTOR.TYPE = R.SECTOR<EB.SEC.LOCAL.REF><1,Y.SECTOR.TYP.POS>
	
	BEGIN CASE 
	CASE Y.SECTOR.TYPE EQ "STAF" OR Y.SECTOR.TYPE EQ "INDV" 
		R.NEW(FT.LOCAL.REF)<1,Y.DBTR.TYPE.POS>  = 1
	CASE Y.SECTOR.TYPE EQ "CORP" OR Y.SECTOR.TYPE EQ "ORGN" 
		R.NEW(FT.LOCAL.REF)<1,Y.DBTR.TYPE.POS>  = 2
	CASE Y.SECTOR.TYPE EQ "GOVT"
		R.NEW(FT.LOCAL.REF)<1,Y.DBTR.TYPE.POS>  = 3
	CASE OTHERWISE(1) 
		R.NEW(FT.LOCAL.REF)<1,Y.DBTR.TYPE.POS>  = 0
	END CASE

	IF Y.ACCOUNT[1,3] EQ 'IDR' OR Y.ACCOUNT[1,2] EQ 'PL' THEN
		R.NEW(FT.LOCAL.REF)<1,Y.DBTR.ACCTYPE.POS> = "00"
		R.NEW(FT.LOCAL.REF)<1,Y.DBTR.TYPE.POS>    = 2
		R.NEW(FT.LOCAL.REF)<1,Y.DBTR.RESSTS.POS>  = "01"
		T.LOCREF<Y.DBTR.ACCTYPE.POS,7>            = 'NOINPUT'
        T.LOCREF<Y.DBTR.TYPE.POS,7>               = 'NOINPUT'
		T.LOCREF<Y.DBTR.RESSTS.POS,7>             = 'NOINPUT'
	END
	
    T.LOCREF<Y.DBTR.NM.POS,7> = ''
    
*    IF MESSAGE NE "VAL" AND OFS$OPERATION NE "PROCESS" THEN

        CALL F.READ(FN.IDIH.FUND.PRODUCT.PAR,Y.CATEGORY, R.IDIH.FUND.PRODUCT.PAR,F.IDIH.FUND.PRODUCT.PAR,READ.PFRD.ERR)
        IF NOT(R.IDIH.FUND.PRODUCT.PAR) THEN
            R.NEW(FT.LOCAL.REF)<1,Y.DBTR.NM.POS> = "BTPN SYARIAH"
        END ELSE
            GOSUB CHECK.ACCOUNT
        END

*    END

    IF Y.CHQ EQ '' THEN
        R.NEW(FT.LOCAL.REF)<1,Y.DRAW.CHQ.NO.POS> = ''
    END ELSE
        R.NEW(FT.LOCAL.REF)<1,Y.DRAW.CHQ.NO.POS> = Y.CHQ
    END
    Y.AMOUNT.VALUE = R.NEW(FT.DEBIT.AMOUNT)
    R.NEW(FT.LOCAL.REF)<1,Y.FT.DBTR.ID.POS> =  Y.LEGAL.ID.NO
	
    GOSUB WORDS
    GOSUB CURRENCY

*20220823
    IF R.NEW(FT.COMMISSION.CODE) NE "WAIVE" THEN
        R.NEW(FT.CHARGES.ACCT.NO) = COMI
        N(FT.COMMISSION.TYPE) = "10.1"
    END
    IF R.NEW(FT.COMMISSION.CODE) EQ "WAIVE" THEN
        R.NEW(FT.CHARGES.ACCT.NO) = ""
    END
*\20220823
    RETURN


*-----------------------------------------------------------------------------
WORDS:
*-----------------------------------------------------------------------------
    R.NEW(FT.LOCAL.REF)<1,Y.AMT.WORDS.POS> = ''

    CALL DE.O.PRINT.WORDS(Y.AMOUNT.VALUE,Y.AMT.WORDS,Y.LANGUAGE,Y.LINE.LENGTH,Y.NO.OF.LINES,Y.ERR.MSG)
    CTR = DCOUNT(Y.AMT.WORDS,"*")
    FOR I = 1 TO CTR
        Y.AMT.WORDS.FPOS = FIELD(Y.AMT.WORDS,"*",I)
        CONVERT "X" TO '' IN Y.AMT.WORDS
        IF (Y.AMT.WORDS.FPOS NE ",") AND Y.AMT.WORDS.FPOS THEN
            IF (Y.AMT.WORDS.FPOS EQ "Seratus") OR (Y.AMT.WORDS.FPOS EQ "Seribu") THEN
                Y.OUT<CTR.OUT-1> = Y.AMT.WORDS.FPOS : " "
            END ELSE
                Y.OUT<CTR.OUT> = Y.AMT.WORDS.FPOS : " "
                CTR.OUT = CTR.OUT + 1
            END
        END
    NEXT

    RETURN


*-----------------------------------------------------------------------------
CURRENCY:
*-----------------------------------------------------------------------------
    FLAG = 1

    Y.WORDS = ""
    FOR I = 1 TO (CTR.OUT-1)
        AMT.LEN = LEN(R.NEW(FT.LOCAL.REF)<1,Y.AMT.WORDS.POS,FLAG>) + LEN(Y.OUT<I>)
        IF (AMT.LEN GT 65) THEN
            FLAG = FLAG + 1
            AMT.LEN = 0
        END
        R.NEW(FT.LOCAL.REF)<1,Y.AMT.WORDS.POS,FLAG> := Y.OUT<I>
    NEXT
    CALL F.READ(FN.CURRENCY,Y.CUR,R.CUR,F.CURRENCY,CUR.ERR)
    Y.CURRENCY = R.CUR<EB.CUR.CCY.NAME,1>
    CUR = FIELD(Y.CURRENCY," ",2)

    R.NEW(FT.LOCAL.REF)<1,Y.AMT.WORDS.POS,FLAG> := CUR

    RETURN

*-----------------------------------------------------------------------------
CHECK.ACCOUNT:
*-----------------------------------------------------------------------------
    IF R.AC EQ '' THEN
        CALL F.READ.HISTORY(FN.ACCOUNT.HIS, Y.ACCOUNT, R.AC, F.ACCOUNT.HIS, AC.HIS.ERR)
    END

    Y.AA.ID = R.AC<AC.ARRANGEMENT.ID>

    PROPERTY.ID = "BALANCE"
    Y.PROPERTY.CLASS = ""
    Y.EFFECTIVE.DATE = TODAY
    CALL AA.GET.PROPERTY.RECORD("",Y.AA.ID,PROPERTY.ID,Y.EFFECTIVE.DATE,Y.PROPERTY.CLASS,"",R.AA.ACCOUNT,RET.ERROR)

    Y.ATI.JOINT.NAME = R.AA.ACCOUNT<AA.AC.LOCAL.REF, Y.AA.ATI.JOINT.NAME.POS>
    CONVERT SM TO " " IN Y.ATI.JOINT.NAME
    Y.ATI.JOINT.NAME = Y.ATI.JOINT.NAME[1,40]
    IF (NUM(Y.ACCOUNT[1,3])) THEN
        R.NEW(FT.LOCAL.REF)<1,Y.DBTR.NM.POS> = Y.ATI.JOINT.NAME
    END ELSE
        R.NEW(FT.LOCAL.REF)<1,Y.DBTR.NM.POS> = R.AC<AC.ACCOUNT.TITLE.1>
    END

    RETURN

*-----------------------------------------------------------------------------
END
