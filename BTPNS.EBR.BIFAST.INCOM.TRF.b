*-----------------------------------------------------------------------------------
	SUBROUTINE BTPNS.EBR.BIFAST.INCOM.TRF(ENQ.DATA)
*-----------------------------------------------------------------------------------
* Author	: Kania Lydia
* Usage		: Routine for API inquiry incoming bifast
* Date		: 20220621
* Reference	: 
*-----------------------------------------------------------------------------------
* Modification History:
* YYYYMMDD - Name - Reference
*-----------------------------------------------------------------------------------	
	$INSERT I_COMMON
    $INSERT I_EQUATE   
	$INSERT I_ENQUIRY.COMMON
	$INSERT I_F.CUSTOMER
    $INSERT I_F.ACCOUNT
	$INSERT I_F.AA.ARRANGEMENT
	$INSERT I_F.POSTING.RESTRICT
	$INSERT I_F.BTPNS.TL.BFAST.INTERFACE.PARAM
	$INSERT I_F.BTPNS.TH.BIFAST.PROXY.CONC
	$INSERT I_F.AA.ACCOUNT.DETAILS
	
*-----------------------------------------------------------------------------
MAIN:
*-----------------------------------------------------------------------------
    GOSUB INIT 

    RETURN
*-----------------------------------------------------------------------------
INIT:
*-----------------------------------------------------------------------------
	FN.CUSTOMER	= 'F.CUSTOMER'
	F.CUSTOMER	= ''
	CALL OPF(FN.CUSTOMER, F.CUSTOMER)
	
	FN.AA.ARRANGEMENT	= 'F.AA.ARRANGEMENT'
	F.AA.ARRANGEMENT	= ''
	CALL OPF(FN.AA.ARRANGEMENT, F.AA.ARRANGEMENT)

	FN.ACCOUNT  = 'F.ACCOUNT'
	F.ACCOUNT   = ''
	CALL OPF(FN.ACCOUNT, F.ACCOUNT)
	
	FN.ALT.ACCT = 'F.ALTERNATE.ACCOUNT'
    F.ALT.ACCT  = ''
    CALL OPF(FN.ALT.ACCT, F.ALT.ACCT)
	
	FN.BTPNS.TL.BFAST.INTERFACE.PARAM = "F.BTPNS.TL.BFAST.INTERFACE.PARAM"
    F.BTPNS.TL.BFAST.INTERFACE.PARAM  = ""
    CALL OPF(FN.BTPNS.TL.BFAST.INTERFACE.PARAM, F.BTPNS.TL.BFAST.INTERFACE.PARAM)
	
	FN.POSTING.RESTRICT = 'F.POSTING.RESTRICT'
    F.POSTING.RESTRICT  = ''
    CALL OPF(FN.POSTING.RESTRICT, F.POSTING.RESTRICT)
	
	FN.BTPNS.PROXY = 'F.BTPNS.TH.BIFAST.PROXY.CONC'
    F.BTPNS.PROXY  = ''
    CALL OPF(FN.BTPNS.PROXY, F.BTPNS.PROXY)
	
	FN.AA.ACCOUNT.DETAILS = "F.AA.ACCOUNT.DETAILS"
    F.AA.ACCOUNT.DETAILS  = ""
    CALL OPF(FN.AA.ACCOUNT.DETAILS, F.AA.ACCOUNT.DETAILS)
	
	FIND "@ID" IN ENQ.DATA<2> SETTING Y.AF,Y.AV THEN
        Y.REF.ID = ENQ.DATA<4, Y.AV>
    END
	
	CALL F.READ(FN.ACCOUNT, Y.REF.ID, R.ACCOUNT, F.ACCOUNT, Y.ERR.ACCOUNT)
	CALL F.READ(FN.ALT.ACCT, Y.REF.ID, R.ALT.ACCT, F.ALT.ACCT, Y.ERR.ALT.ACCT)
	CALL F.READ(FN.BTPNS.PROXY, Y.REF.ID, R.BTPNS.PROXY, F.BTPNS.PROXY, Y.ERR.BTPNS.PROXY)
	
	BEGIN CASE
*---ACCOUNT----
	CASE R.ACCOUNT NE ""
		Y.CATEGORY		= R.ACCOUNT<AC.CATEGORY>
		Y.CUSTOMER		= R.ACCOUNT<AC.CUSTOMER>
		Y.RESTRICT.CODE	= R.ACCOUNT<AC.POSTING.RESTRICT>
		Y.ARR.ID		= R.ACCOUNT<AC.ARRANGEMENT.ID>
		Y.LIM.REF		= R.ACCOUNT<AC.LIMIT.REF>
		SEL.LIST		= Y.REF.ID
		
		CALL F.READ(FN.AA.ARRANGEMENT, Y.ARR.ID, R.AA.ARRANGEMENT, F.AA.ARRANGEMENT, Y.ERR.AA.ARRANGEMENT)
		Y.PRODUCT.LINE	= R.AA.ARRANGEMENT<AA.ARR.PRODUCT.LINE>
		Y.ARR.STATUS	= R.AA.ARRANGEMENT<AA.ARR.ARR.STATUS>
		
		CALL F.READ(FN.AA.ACCOUNT.DETAILS, Y.ARR.ID, R.AA.ACCOUNT.DETAILS, F.AA.ACCOUNT.DETAILS, ERR.AA.ACCOUNT.DETAILS)
        Y.ARR.DORMANCY.STATUS = R.AA.ACCOUNT.DETAILS<AA.AD.ARR.DORMANCY.STATUS>

*-------CHECKING FLAGING-----------
		Y.FLAG.ACC = 0
		Y.FLAG.CATEG.IN = 0
		IF Y.PRODUCT.LINE EQ "ACCOUNTS" THEN
			Y.FLAG.ACC	= 1
		END ELSE
			IF Y.LIM.REF EQ "NOSTRO" OR (Y.CATEGORY GE 5000 AND Y.CATEGORY LE 5999) THEN
				Y.FLAG.ACC	= 1
			END
		END
		
*-------CHECKING PROCESS----------	
		BEGIN CASE
		CASE Y.FLAG.ACC EQ 0
			ENQ.ERROR = 'EB-BIFAST.INVALID.ACCOUNT'
		CASE Y.CUSTOMER EQ ""
			ENQ.ERROR = 'EB-BIFAST.CUS.IS.MANDATORY'
		CASE Y.ARR.STATUS EQ 'CLOSED' OR Y.ARR.STATUS EQ 'CLOSE' OR Y.ARR.STATUS EQ 'PENDING.CLOSURE' OR Y.ARR.STATUS EQ 'UNAUTH' OR Y.ARR.DORMANCY.STATUS EQ 'DORMANT'
			ENQ.ERROR = 'EB-BIFAST.INVALID.ACCOUNT'
		CASE 1
			GOSUB CHECK.ACCOUNT
			GOSUB PROCESS
		END CASE

*---ALTERNATE ACCOUNT----		
	CASE R.ALT.ACCT NE ""
		Y.ACCT.ID	= R.ALT.ACCT<1>
		SEL.LIST	= Y.ACCT.ID
		CALL F.READ(FN.ACCOUNT, Y.ACCT.ID, R.ACCOUNT, F.ACCOUNT, Y.ERR.ACCOUNT)
		Y.CATEGORY		= R.ACCOUNT<AC.CATEGORY>
		Y.CUSTOMER		= R.ACCOUNT<AC.CUSTOMER>
		Y.RESTRICT.CODE	= R.ACCOUNT<AC.POSTING.RESTRICT>
		Y.ARR.ID		= R.ACCOUNT<AC.ARRANGEMENT.ID>
		Y.LIM.REF		= R.ACCOUNT<AC.LIMIT.REF>
		
		CALL F.READ(FN.AA.ARRANGEMENT, Y.ARR.ID, R.AA.ARRANGEMENT, F.AA.ARRANGEMENT, Y.ERR.AA.ARRANGEMENT)
		Y.PRODUCT.LINE	= R.AA.ARRANGEMENT<AA.ARR.PRODUCT.LINE>
		Y.ARR.STATUS	= R.AA.ARRANGEMENT<AA.ARR.ARR.STATUS>
		
		CALL F.READ(FN.AA.ACCOUNT.DETAILS, Y.ARR.ID, R.AA.ACCOUNT.DETAILS, F.AA.ACCOUNT.DETAILS, ERR.AA.ACCOUNT.DETAILS)
        Y.ARR.DORMANCY.STATUS = R.AA.ACCOUNT.DETAILS<AA.AD.ARR.DORMANCY.STATUS>
		
*-------CHECKING FLAGING-----------
		Y.FLAG.ACC = 0
		Y.FLAG.CATEG.IN = 0
		IF Y.PRODUCT.LINE EQ "ACCOUNTS" THEN
			Y.FLAG.ACC	= 1
		END ELSE
			IF Y.LIM.REF EQ "NOSTRO" OR (Y.CATEGORY GE 5000 AND Y.CATEGORY LE 5999) THEN
				Y.FLAG.ACC	= 1
			END
		END
		
*-------CHECKING PROCESS----------		
		BEGIN CASE
		CASE Y.FLAG.ACC EQ 0
			ENQ.ERROR = 'EB-BIFAST.INVALID.ACCOUNT'
		CASE Y.CUSTOMER EQ ""
			ENQ.ERROR = 'EB-BIFAST.CUS.IS.MANDATORY'
		CASE Y.ARR.STATUS EQ 'CLOSED' OR Y.ARR.STATUS EQ 'CLOSE' OR Y.ARR.STATUS EQ 'PENDING.CLOSURE' OR Y.ARR.STATUS EQ 'UNAUTH' OR Y.ARR.DORMANCY.STATUS EQ 'DORMANT'
			ENQ.ERROR = 'EB-BIFAST.INVALID.ACCOUNT'
		CASE 1
			GOSUB CHECK.ACCOUNT
			GOSUB PROCESS
		END CASE

*---PROXY----
	CASE R.BTPNS.PROXY NE ""
		Y.ACCT.ID		= R.BTPNS.PROXY<1>
		SEL.LIST		= Y.ACCT.ID
		Y.PROXY.STATUS	= R.BTPNS.PROXY<BF.PC.PROXY.STATUS>
		CALL F.READ(FN.ACCOUNT, Y.ACCT.ID, R.ACCOUNT, F.ACCOUNT, Y.ERR.ACCOUNT)
		Y.CATEGORY		= R.ACCOUNT<AC.CATEGORY>
		Y.CUSTOMER		= R.ACCOUNT<AC.CUSTOMER>
		Y.RESTRICT.CODE	= R.ACCOUNT<AC.POSTING.RESTRICT>
		Y.ARR.ID		= R.ACCOUNT<AC.ARRANGEMENT.ID>
		Y.LIM.REF		= R.ACCOUNT<AC.LIMIT.REF>
		
		CALL F.READ(FN.AA.ARRANGEMENT, Y.ARR.ID, R.AA.ARRANGEMENT, F.AA.ARRANGEMENT, Y.ERR.AA.ARRANGEMENT)
		Y.PRODUCT.LINE	= R.AA.ARRANGEMENT<AA.ARR.PRODUCT.LINE>
		Y.ARR.STATUS	= R.AA.ARRANGEMENT<AA.ARR.ARR.STATUS>
		
		CALL F.READ(FN.AA.ACCOUNT.DETAILS, Y.ARR.ID, R.AA.ACCOUNT.DETAILS, F.AA.ACCOUNT.DETAILS, ERR.AA.ACCOUNT.DETAILS)
        Y.ARR.DORMANCY.STATUS = R.AA.ACCOUNT.DETAILS<AA.AD.ARR.DORMANCY.STATUS>
		
*-------CHECKING FLAGING-----------
		Y.FLAG.ACC = 0
		Y.FLAG.CATEG.IN = 0
		IF Y.PRODUCT.LINE EQ "ACCOUNTS" THEN
			Y.FLAG.ACC	= 1
		END ELSE
			IF Y.LIM.REF EQ "NOSTRO" OR (Y.CATEGORY GE 5000 AND Y.CATEGORY LE 5999) THEN
				Y.FLAG.ACC	= 1
			END
		END
				
*-------CHECKING PROCESS----------		
		BEGIN CASE
		CASE Y.FLAG.ACC EQ 0
			ENQ.ERROR = 'EB-BIFAST.INVALID.ACCOUNT'
		CASE Y.CUSTOMER EQ ""
			ENQ.ERROR = 'EB-BIFAST.CUS.IS.MANDATORY'
		CASE Y.ARR.STATUS EQ 'CLOSED' OR Y.ARR.STATUS EQ 'CLOSE' OR Y.ARR.STATUS EQ 'PENDING.CLOSURE' OR Y.ARR.STATUS EQ 'UNAUTH' OR Y.ARR.DORMANCY.STATUS EQ 'DORMANT'
			ENQ.ERROR = 'EB-BIFAST.INVALID.ACCOUNT'
		CASE 1
			GOSUB CHECK.ACCOUNT
			GOSUB PROCESS
		END CASE
		
	CASE 1
		ENQ.ERROR = 'EB-BIFAST.INVALID.ACCOUNT' 
	END CASE
	
	RETURN
*-----------------------------------------------------------------------------
CHECK.ACCOUNT:
*-----------------------------------------------------------------------------
	
	CALL F.READ(FN.BTPNS.TL.BFAST.INTERFACE.PARAM,"SYSTEM",R.BIFAST.PARAM,F.BTPNS.TL.BFAST.INTERFACE.PARAM,READ.PAR.ERR)
	Y.RESTRICT.CATEG.IN = R.BIFAST.PARAM<BF.INT.PAR.RESTRICT.CATEG.IN>
	LOCATE Y.CATEGORY IN Y.RESTRICT.CATEG.IN<1,1> SETTING POS THEN
		ENQ.ERROR = 'EB-BIFAST.INVALID.ACCOUNT'
	END
	
	CALL F.READ(FN.POSTING.RESTRICT,Y.RESTRICT.CODE,R.POSTING.RESTRICT,F.POSTING.RESTRICT,POST.REST.ERR)
	Y.RESTRICT.TYPE	= R.POSTING.RESTRICT<AC.POS.RESTRICTION.TYPE>
	IF Y.RESTRICT.TYPE EQ 'CREDIT' OR Y.RESTRICT.TYPE EQ 'ALL' THEN
		ENQ.ERROR	= 'EB-BIFAST.INVALID.ACCOUNT'
	END
		
	RETURN
	
*-----------------------------------------------------------------------------
PROCESS:
*-----------------------------------------------------------------------------
	
	Y.ACC.ID = SEL.LIST
	CONVERT FM TO " " IN Y.ACC.ID
	IF Y.ACC.ID THEN
        ENQ.DATA<2,Y.AV> = ""
        ENQ.DATA<3,Y.AV> = ""
        ENQ.DATA<4,Y.AV> = ""

        ENQ.DATA<2,Y.AV> = "@ID"
        ENQ.DATA<3,Y.AV> = "EQ"
        ENQ.DATA<4,Y.AV> = Y.ACC.ID
    END
	
	RETURN
*-----------------------------------------------------------------------------
END