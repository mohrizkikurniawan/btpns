    SUBROUTINE BTPNS.VAT.BIFAST.CHK.ACTIVE
*-----------------------------------------------------------------------------
* Developer Name     : Hamka Ardyansah
* Development Date   : 3 Agustus 2022
* Description        : for default value alias management
*-----------------------------------------------------------------------------
* Modification History:-
*-----------------------------------------------------------------------------
* Date         :
* Modified by     :
* Description     :
* No Log          :
*-----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.BTPNS.TH.BIFAST.PROXY.MGMT
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CUSTOMER
    $INSERT I_F.SECTOR
    $INSERT I_F.BTPNS.TL.BFAST.OPR.TYPE
    $INSERT I_F.BTPNS.TL.BFAST.ACCT.TYPE
    $INSERT I_F.BTPNS.TL.BFAST.CUST.TYPE
    $INSERT I_F.BTPNS.TL.BFAST.PROXY.TYPE
    $INSERT I_GTS.COMMON
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.POSTING.RESTRICT
    $INSERT I_F.BTPNS.TL.BFAST.INTERFACE.PARAM

    GOSUB INIT
    GOSUB PROCESS
    
    RETURN
    
*-----------------------------------------------------------------------------
INIT:
*-----------------------------------------------------------------------------
    
    FN.ACC = 'F.ACCOUNT'
    F.ACC = ''
    CALL OPF(FN.ACC,F.ACC)
    
    FN.CU = 'F.CUSTOMER'
    F.CU = ''
    CALL OPF(FN.CU,F.CU)
    
    FN.PROXY.MGMT = 'F.BTPNS.TH.BIFAST.PROXY.MGMT'
    F.PROXY.MGMT = ''
    CALL OPF(FN.PROXY.MGMT,F.PROXY.MGMT)
    
    FN.SECTOR = "F.SECTOR"
    F.SECTOR  = ""
    CALL OPF(FN.SECTOR, F.SECTOR)
    
    FN.BTPNS.TL.BFAST.OPR.TYPE = "F.BTPNS.TL.BFAST.OPR.TYPE"
    F.BTPNS.TL.BFAST.OPR.TYPE  = ""
    CALL OPF(FN.BTPNS.TL.BFAST.OPR.TYPE,F.BTPNS.TL.BFAST.OPR.TYPE)
    
    FN.BTPNS.TL.BFAST.ACCT.TYPE = "F.BTPNS.TL.BFAST.ACCT.TYPE"
    F.BTPNS.TL.BFAST.ACCT.TYPE  = ""
    CALL OPF(FN.BTPNS.TL.BFAST.ACCT.TYPE,F.BTPNS.TL.BFAST.ACCT.TYPE)

    FN.BTPNS.TL.BFAST.CUST.TYPE = "F.BTPNS.TL.BFAST.CUST.TYPE"
    F.BTPNS.TL.BFAST.CUST.TYPE  = ""
    CALL OPF(FN.BTPNS.TL.BFAST.CUST.TYPE,F.BTPNS.TL.BFAST.CUST.TYPE)
    
    FN.BTPNS.TL.BFAST.PROXY.TYPE = "F.BTPNS.TL.BFAST.PROXY.TYPE"
    F.BTPNS.TL.BFAST.PROXY.TYPE  = ""
    CALL OPF(FN.BTPNS.TL.BFAST.PROXY.TYPE,F.BTPNS.TL.BFAST.PROXY.TYPE)

    FN.BTPNS.TL.BFAST.INTERFACE.PARAM = "F.BTPNS.TL.BFAST.INTERFACE.PARAM"
    F.BTPNS.TL.BFAST.INTERFACE.PARAM  = ""
    CALL OPF(FN.BTPNS.TL.BFAST.INTERFACE.PARAM, F.BTPNS.TL.BFAST.INTERFACE.PARAM)
    
    FN.AA.ACCOUNT.DETAILS = "F.AA.ACCOUNT.DETAILS"
    F.AA.ACCOUNT.DETAILS  = ""
    CALL OPF(FN.AA.ACCOUNT.DETAILS, F.AA.ACCOUNT.DETAILS)

    FN.POSTING.RESTRICT = "F.POSTING.RESTRICT"
    F.POSTING.RESTRICT  = ""
    CALL OPF(FN.POSTING.RESTRICT, F.POSTING.RESTRICT)
	
    FN.IDCH.SKN.PROVINCE = "F.IDCH.SKN.PROVINCE"
    F.IDCH.SKN.PROVINCE  = ""
    CALL OPF(FN.IDCH.SKN.PROVINCE,F.IDCH.SKN.PROVINCE)
	
    Y.DATE = TODAY
    
    Y.APP  = "ACCOUNT" :FM: "CUSTOMER":FM:"SECTOR"
    Y.FLD.NAME  = "B.PROXY.TYPE" :VM: "B.PROXY.ID" :VM: "B.PROXY.STATUS" :VM: "ATI.JOINT.NAME" :VM: "B.PROXY.REG.ID"
    Y.FLD.NAME := FM: "LEGAL.TYPE" :VM: "LEGAL.ID.NO" :VM: "PROVINCE" :VM: "RESIDE.Y.N"
    Y.FLD.NAME := FM: "SECTOR.TYP"
     
    Y.POS    = ""
    CALL MULTI.GET.LOC.REF(Y.APP, Y.FLD.NAME, Y.POS)

    Y.PROXY.TYPE.POS    = Y.POS<1,1>
    Y.PROXY.ID.POS      = Y.POS<1,2>
    Y.PROXY.STATUS.POS  = Y.POS<1,3>
    Y.ATI.JNAME.POS     = Y.POS<1,4>
    Y.PROXY.REG.ID.POS  = Y.POS<1,5>
    Y.LEGAL.TYPE.POS    = Y.POS<2,1>
    Y.LEGAL.ID.NO.POS   = Y.POS<2,2>
    Y.PROVINCE.POS      = Y.POS<2,3>
    Y.RESIDE.Y.N.POS    = Y.POS<2,4>
    Y.SECTOR.TYP.POS    = Y.POS<3,1>
    Y.ID.ACCOUNT = R.NEW(BF.PM.ACCOUNT.NO)
    
    CALL F.READ(FN.ACC,Y.ID.ACCOUNT,R.ACC,F.ACC,ERR.ACCOUNT)
    
    Y.CATEGORY     = R.ACC<AC.CATEGORY>
    Y.PROXY.TYPE   = R.ACC<AC.LOCAL.REF,Y.PROXY.TYPE.POS>
    Y.PROXY.ID     = R.ACC<AC.LOCAL.REF,Y.PROXY.ID.POS>
    Y.PROXY.STATUS = R.ACC<AC.LOCAL.REF,Y.PROXY.STATUS.POS>
    Y.PROXY.REG.ID = R.ACC<AC.LOCAL.REF,Y.PROXY.REG.ID.POS>
    Y.DATE      = TODAY
    
RETURN
*-----------------------------------------------------------------------------
PROCESS:
*-----------------------------------------------------------------------------

    GOSUB DEFAULT.VALUE
   
RETURN
*-----------------------------------------------------------------------------
DEFAULT.VALUE:
*-----------------------------------------------------------------------------
   Y.ID = ID.NEW
  
   Y.CIF = R.ACC<AC.CUSTOMER>
   Y.ACC.NAME = R.ACC<AC.LOCAL.REF, Y.ATI.JNAME.POS>
   CALL F.READ(FN.CU, Y.CIF, R.CUS, F.CU, CU.ERR)
   Y.LEGAL.ID       = R.CUS<EB.CUS.LOCAL.REF, Y.LEGAL.ID.NO.POS>
   Y.LEGAL.TYPE     = R.CUS<EB.CUS.LOCAL.REF, Y.LEGAL.TYPE.POS>
   Y.PROVINCE       = R.CUS<EB.CUS.LOCAL.REF, Y.PROVINCE.POS>
   Y.RESIDE.Y.N     = R.CUS<EB.CUS.LOCAL.REF><1,Y.RESIDE.Y.N.POS>
   Y.RESIDENCE      = R.CUS<EB.CUS.RESIDENCE>
   Y.SECTOR         = R.CUS<EB.CUS.SECTOR>
   
   CALL F.READ(FN.SECTOR, Y.SECTOR, R.SECTOR, F.SECTOR,READ.SEC.ERR)
   Y.SECTOR.TYPE = R.SECTOR<EB.SEC.LOCAL.REF><1,Y.SECTOR.TYP.POS>

   R.NEW(BF.PM.CUSTOMER.NO) = Y.CIF
   
   IF Y.CATEGORY GE 6000 AND Y.CATEGORY LT 6500 THEN
     R.NEW(BF.PM.ACCOUNT.TYPE) = "10"
   END
   IF Y.CATEGORY GE 1000 AND Y.CATEGORY LT 2999 THEN
     R.NEW(BF.PM.ACCOUNT.TYPE) = "20"
   END
    
   CALL F.READ(FN.SECTOR, Y.SECTOR, R.SECTOR, F.SECTOR,READ.SEC.ERR)
   Y.SECTOR.TYPE = R.SECTOR<EB.SEC.LOCAL.REF><1,Y.SECTOR.TYP.POS>
    
   BEGIN CASE 
   CASE Y.SECTOR.TYPE EQ "STAF" OR Y.SECTOR.TYPE EQ "INDV" 
     R.NEW(BF.PM.CUSTOMER.TYPE)  = 1
   CASE Y.SECTOR.TYPE EQ "CORP" OR Y.SECTOR.TYPE EQ "ORGN" 
     R.NEW(BF.PM.CUSTOMER.TYPE)  = 2
   CASE Y.SECTOR.TYPE EQ "GOVT"
     R.NEW(BF.PM.CUSTOMER.TYPE)  = 3
   CASE OTHERWISE(1) 
     R.NEW(BF.PM.CUSTOMER.TYPE)  = 0
   END CASE
  
   R.NEW(BF.PM.LEGAL.ID.NO)  = Y.LEGAL.ID 
   R.NEW(BF.PM.TOWN.ID)      = Y.PROVINCE
   R.NEW(BF.PM.ACCOUNT.NAME) = Y.ACC.NAME
   R.NEW(BF.PM.REGISTER.ID)  = Y.PROXY.REG.ID
   R.NEW(BF.PM.PROXY.ID)     = Y.PROXY.ID
   R.NEW(BF.PM.PROXY.STATUS) = Y.PROXY.STATUS
   R.NEW(BF.PM.PROXY.TYPE)   = Y.PROXY.TYPE
   Y.ONBOARD.PARTNER      = R.NEW(BF.PM.ONBOARD.PARTNER)
   Y.REFERENCE.NO         =  Y.DATE:'000':Y.ONBOARD.PARTNER:'720':Y.ID
   R.NEW(BF.PM.REFF.NO)      = Y.REFERENCE.NO

   IF R.NEW(BF.PM.ID.SCOPES) EQ "AMND" THEN
    R.NEW(BF.PM.OLD.PROXY.TYPE) = Y.PROXY.TYPE
    R.NEW(BF.PM.OLD.PROXY.ID)   = Y.PROXY.ID
   END

*< Set Enrichment 
   
   Y.ID.SCOPES     = R.NEW(BF.PM.ID.SCOPES)
   Y.ID.ACC.TYPE   = R.NEW(BF.PM.ACCOUNT.TYPE)
   Y.ID.CUST.TYPE  = R.NEW(BF.PM.CUSTOMER.TYPE)
   Y.ID.PROXY.TYPE = R.NEW(BF.PM.PROXY.TYPE)
   Y.PROXY.STATUS  = R.NEW(BF.PM.PROXY.STATUS)
   
   CALL DBR("BTPNS.TL.BFAST.OPR.TYPE":FM:BF.OT.DESCRIPTION,Y.ID.SCOPES,Y.DESC.SCOPES)
   CALL DBR("BTPNS.TL.BFAST.ACCT.TYPE":FM:BF.CP.DESCRIPTION,Y.ID.ACC.TYPE,Y.DESC.ACC.TYPE)
   CALL DBR("BTPNS.TL.BFAST.CUST.TYPE":FM:BF.CT.DESCRIPTION,Y.ID.CUST.TYPE,Y.DESC.CUST.TYPE)
   CALL DBR("BTPNS.TL.BFAST.PROXY.TYPE":FM:BF.PT.DESCRIPTION,Y.ID.PROXY.TYPE,Y.DESC.PROXY.TYPE)
   CALL DBR("BTPNS.TL.BFAST.PROXY.TYPE":FM:BF.PT.DESCRIPTION,Y.PROXY.STATUS,Y.DESC.PROXY.STATUS)  
   *CALL DBR("IDCH.SKN.PROVINCE":FM:SKN.PROVINCE.DESCRIPTION,Y.PROVINCE,Y.DESC.PROVINCE)
   
   CALL F.READ(FN.IDCH.SKN.PROVINCE,Y.PROVINCE,R.IDCH.SKN.PROVINCE,F.IDCH.SKN.PROVINCE,ERRIDCH.SKN.PROVINCE)
   Y.DESC.PROVINCE = R.IDCH.SKN.PROVINCE<1>
   
   OFS$ENRI<BF.PM.ID.SCOPES>     = Y.DESC.SCOPES
   OFS$ENRI<BF.PM.ACCOUNT.NAME>  = Y.ACC.NAME
   OFS$ENRI<BF.PM.ACCOUNT.TYPE>  = Y.DESC.ACC.TYPE
   OFS$ENRI<BF.PM.CUSTOMER.TYPE> = Y.DESC.CUST.TYPE
   OFS$ENRI<BF.PM.PROXY.TYPE>    = Y.DESC.PROXY.TYPE
   OFS$ENRI<BF.PM.PROXY.STATUS>  = Y.DESC.PROXY.STATUS
   OFS$ENRI<BF.PM.CUSTOMER.NO>   = Y.ACC.NAME   
   OFS$ENRI<BF.PM.TOWN.ID>       = Y.DESC.PROVINCE
   
   IF TRIM(Y.LEGAL.TYPE) = 'KTP' THEN
      R.NEW(BF.PM.LEGAL.ID.TYPE)    = '01'
      OFS$ENRI<BF.PM.LEGAL.ID.TYPE> = 'KTP'
   END ELSE
      R.NEW(BF.PM.LEGAL.ID.TYPE) = '02'
      OFS$ENRI<BF.PM.LEGAL.ID.TYPE> = 'PASPOR'
   END
   
   IF Y.RESIDENCE EQ "ID" THEN
     R.NEW(BF.PM.RESS.STATUS) = "01"
     OFS$ENRI<BF.PM.RESS.STATUS> = 'RESIDENT'
   END ELSE
     R.NEW(BF.PM.RESS.STATUS) = "02"
     OFS$ENRI<BF.PM.RESS.STATUS> = 'NON-RESIDENT'
   END
   
   CALL REBUILD.SCREEN
*>
RETURN
*-----------------------------------------------------------------------------
END